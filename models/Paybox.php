<?php namespace Electrica\Paybox\Models;

use Model;
use Lovata\OrdersShopaholic\Classes\Helper\AbstractPaymentGateway;

/**
 * Paybox Model
 */

class Paybox extends AbstractPaymentGateway
{

    public function getMessage(): string
    {
        // TODO: Implement getMessage() method.
        return 'asdasdasdasd';
    }

    public function getGatewayProperty($sFieldName)
    {
        return parent::getGatewayProperty($sFieldName); // TODO: Change the autogenerated stub
    }

    public function getOrderProperty($sFieldName)
    {
        return parent::getOrderProperty($sFieldName); // TODO: Change the autogenerated stub
    }

    public function getRedirectURL(): string
    {
        // TODO: Implement getRedirectURL() method.
        trace_log($this->sendPurchaseData());
    }

    public function getResponse(): array
    {
        // TODO: Implement getResponse() method.
    }

    public function validatePurchaseData()
    {
        // TODO: Implement validatePurchaseData() method.
        trace_log('validatePurchaseData');
    }

    public function processPurchaseResponse()
    {
        // TODO: Implement processPurchaseResponse() method.
    }

    public function preparePurchaseData()
    {
        // TODO: Implement preparePurchaseData() method.
    }

    public function sendPurchaseData()
    {
        // TODO: Implement sendPurchaseData() method.

        $request = [
            'pg_amount'         => '',
            'pg_check_url'      => '', //url for checking status of order. It must be a real url on website, and return "OK" or "rejected"
            'pg_description'    => '', //any description of order
            'pg_encoding'       => 'UTF-8', //charset
            'pg_currency'       => '', //currency of payment, default is KZT
            'pg_user_ip'        => $_SERVER['REMOTE_ADDR'],
            'pg_lifetime'       => 86400, //lifetime of payment, default is 86400 seconds
            'pg_merchant_id'    => '', //id of merchant in PayBox system
            'pg_order_id'       => '', //id of order in merchant database
            'pg_result_url'     => '', //url to which we will send the payment result
            'pg_request_method' => 'GET', //you can use GET, POST, XML
            'pg_salt'           => rand(21, 43433), //salt that will be used in encrypting the request
            'pg_success_url'    => '', //here we will return the customer if payment was successful. It must be a real url on website
            'pg_failure_url'    => '', //here we will return the customer if the payment has failed. It must be a real url on website
            'pg_user_phone'     => '', //phone of the customer, which he will see in the form of payment
            'pg_user_contact_email' => '', //email of the customer, where he will receive a notification of the status of payment
            'pg_testing_mode' => ''
        ];

        trace_log($request);

        $url = 'payment.php';

        //generate a signature and add it to the array

        ksort($request);
        array_unshift($request, $url);
        array_push($request, ''); //add your secret key (you can take it in your personal cabinet on paybox system)

        $request['pg_sig'] = md5(implode(';', $request));

        unset($request[0], $request[1]);
        $query = http_build_query($request);
        $link = 'https://paybox.kz/'.$url .'?'.$query;

        return $link;
    }

}
